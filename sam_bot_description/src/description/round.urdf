<?xml version="1.0"?>
<robot name="sam_bot"
    xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- COLORS -->
    <material name="black">
        <color rgba="0.0 0.0 0.0 1.0"/>
    </material>

    <gazebo reference="base_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.31"/>
    <!--0.31-->
    <xacro:property name="base_length" value="0.42"/>
    <!--0.42-->
    <xacro:property name="base_height" value="0.18"/>
    <!--0.18-->

    <xacro:property name="wheel_radius" value="0.10"/>
    <xacro:property name="wheel_width" value="0.04"/>
    <xacro:property name="wheel_ygap" value="0.025"/>
    <xacro:property name="wheel_zoff" value="0.05"/>
    <xacro:property name="wheel_xoff" value="0.12"/>

    <xacro:property name="caster_xoff" value="0.2"/>
    <xacro:property name="caster_back_xoff" value="-0.2"/>
    <!--0.14-->

    <!-- Define some commonly used intertial properties  -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${m}"/>
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}"/>
            <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <!-- Robot Base -->
    <link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_length/2}" length="0.18"/>
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0"/>
            </material>
        </visual>

        <collision name="collision_base">
            <geometry>
                <cylinder radius="${base_length/2}" length="${base_height}"/>
            </geometry>
        </collision>

        <xacro:cylinder_inertia m="2" r="${base_length/2}" h="${base_height}"/>

        <!-- CASTER BACK -->

        <collision name="caster_back_collision">
            <origin xyz="-0.2 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0</mu>
                        <mu2>0</mu2>
                        <slip1>1.0</slip1>
                        <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="caster_back_visual">
            <origin rpy=" 0 0 0" xyz="${caster_back_xoff} 0.0 ${-(base_height/2)}"/>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0"/>
            </material>
        </visual>

        <!-- CASTER FRONT -->
        <collision name="caster_front_collision">
            <origin xyz="0.2 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
            </geometry>

            <surface>
                <friction>
                    <ode>
                        <mu>0</mu>
                        <mu2>0</mu2>
                        <slip1>1.0</slip1>
                        <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>

        <visual name="caster_front_visual">
            <origin rpy=" 0 0 0" xyz="${caster_xoff} 0.0 ${-(base_height/2)}"/>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0"/>
            </material>
        </visual>

    </link>

    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <material name="Gray">
                    <color rgba="0.5 0.5 0.5 1.0"/>
                </material>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
            </collision>

            <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
        </link>

        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_link"/>
            <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
            <!--<limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/> -->
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="drivewhl_l" x_reflect="0" y_reflect="1" />
    <xacro:wheel prefix="drivewhl_r" x_reflect="0" y_reflect="-1" />

    <!-- _____________________________________________________Differential drive ________________________________________________-->
    <gazebo>
        <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

            <left_joint>drivewhl_l_joint</left_joint>
            <right_joint>drivewhl_r_joint</right_joint>


            <wheel_separation>0.22</wheel_separation> <!-- 0.025-->
            <wheel_diameter>0.2</wheel_diameter>


            <max_wheel_torque>20</max_wheel_torque>
            <max_wheel_acceleration>5.0</max_wheel_acceleration>            <!-- 1.0-->


            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>
        </plugin>

    </gazebo>
    <!-- ____________________________________________Laser___________________________________________________________________-->

    <link name="laser_link">
        <inertial>
            <mass value="0.1"/>
            <origin rpy="0  0  0" xyz="0  0  0"/>
            <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
        </inertial>
        <collision name="collision-base">
            <origin rpy="0  0  0" xyz="0  0  0"/>
            <geometry>
                <box size="0.05 0.05 0.041"/>
            </geometry>
        </collision>
        <visual name="visual-base">
            <origin rpy="0  0  0" xyz="0  0  0"/>
            <geometry>
                <box size="0.05 0.05 0.041"/>
            </geometry>
        </visual>
        <collision name="collision-top">
            <origin rpy="0  0  0" xyz="0  0  0.035"/>
            <geometry>
                <cylinder length="0.029" radius="0.021"/>
            </geometry>
        </collision>
        <visual name="visual-top">
            <origin rpy="0  0  0" xyz="0  0  0.035"/>
            <geometry>
                <cylinder length="0.029" radius="0.021"/>
            </geometry>
        </visual>


    </link>

    <joint name="laser_joint" type="fixed">
        <parent link="base_link"/>
        <child link="laser_link"/>
        <origin rpy="0  0  0" xyz="0.16  0    0.12"/>
        <axis xyz="0  0  0"/>

    </joint>

    <gazebo reference="laser_link">
        <sensor name="laser" type="ray">
            <ray>
                <scan>
                    <horizontal>
                        <samples>181</samples>
                        <resolution>1</resolution>
                        <!-- <min_angle>-1.57080</min_angle> -->
                        <min_angle>-1.04</min_angle>
                        <max_angle>1.04</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.08</min>
                    <max>10</max>
                    <resolution>0.05</resolution>
                </range>
            </ray>
            <always_on>1</always_on>
            <update_rate>10</update_rate>
            <visualize>true</visualize>

            <plugin name='laser' filename='libgazebo_ros_ray_sensor.so'>
                <ros>
                    <!--<namespace>/demo</namespace>-->
                    <!-- tolto il remapping originale -->
                    <remapping>~/out:=laser_scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
            </plugin>
        </sensor>
    </gazebo>


</robot>
